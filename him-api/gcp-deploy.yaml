# !!!IMPORTANT NOTE!!!
#
# For a reason I don't understand, the -s option takes the _INSTANCE_NAME
# which I guessed should be the Cloud Run's name.
# But in fact, it MUST be the database name!
# Here is an example : https://github.com/GoogleCloudPlatform/serverless-expeditions/blob/main/cloud-run-django-terraform/main.tf
#
# If you use the Cloud Run name `him-api-prod` you will get the following error:
#
# Step #0 - "Apply Migrations: -> ": ---------- CONNECT CLOUDSQL ----------
# Step #0 - "Apply Migrations: -> ": ERROR: Failed to start cloud_sql_proxy
# Step #0 - "Apply Migrations: -> ": 2022/11/29 07:39:18 current FDs rlimit set to 1048576, wanted limit is 8500. Nothing to do here.
# Step #0 - "Apply Migrations: -> ": 2022/11/29 07:39:19 errors parsing config:
# Step #0 - "Apply Migrations: -> ": googleapi: Error 404: The Cloud SQL instance does not exist., instanceDoesNotExist
# Finished Step #0 - "Apply Migrations: -> "
#
# Sometimes the error is more explicit
#
# ---------- CONNECT CLOUDSQL ----------
# ERROR: Failed to start cloud_sql_proxy
# 2022/11/29 08:39:59 current FDs rlimit set to 1048576, wanted limit is 8500. Nothing to do here.
# 2022/11/29 08:40:00 errors parsing config: googleapi: Error 404: The Cloud SQL instance does not exist., instanceDoesNotExist
# ERROR


steps:  
  - id: "Apply Migrations: -> "
    name: "gcr.io/google-appengine/exec-wrapper"
    args:
      [
        "-i", "${_REGISTERY_URL}",
        "-s", "${_PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
        "-e", "SETTINGS_NAME=django_settings-${_GCP_ENV}",
        "--",
        "python",
        "manage.py",
        "migrate",
      ]

  # - id: "Collectstatic: -> "
  #   name: "gcr.io/google-appengine/exec-wrapper"
  #   args:
  #     [
  #       "-i", "${_REGISTERY_URL}",
  #       "-s", "${_PROJECT_ID}:${_REGION}:${_INSTANCE_NAME}",
  #       "-e", "SETTINGS_NAME=django_settings-${_GCP_ENV}",
  #       "--",
  #       "python",
  #       "manage.py",
  #       "collectstatic",
  #       "--verbosity",
  #       "2",
  #       "--no-input",
  #     ]

  - id: "Deploy container: -> "
    name: gcr.io/google.com/cloudsdktool/cloud-sdk:slim
    entrypoint: gcloud
    args:
      [
        "run",
        "deploy",
        "him-api-${_GCP_ENV}",
        "--image=${_REGISTERY_URL}",
        "--port=${_PORT}",
        "--region=${_REGION}",
        "--platform=managed",
      ]

options:
  dynamic_substitutions: true

substitutions:
  _PROJECT_ID: tinder-him
  _INSTANCE_NAME: him-${_GCP_ENV} # If you put him-api-${_GCP_ENV} (the Cloud Run Name), it will fail
  _REGION: europe-west3
  _REGISTERY_URL: europe-west3-docker.pkg.dev/tinder-him/him/him-api
  _PORT: "8000"